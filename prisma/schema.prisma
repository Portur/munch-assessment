// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["multiSchema", "postgresqlExtensions", "relationJoins"]
}

datasource db {
  provider          = "postgresql"
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
  url               = env("DATABASE_URL")
  schemas           = ["public", "assessment"]
  extensions        = [uuidOssp(map: "uuid-ossp")]
}

model UserDb {
  // columns
  id       String  @unique @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  username String  @unique @db.VarChar(100)
  email    String  @unique @db.VarChar(100)
  name     String  @db.VarChar(100)
  password String
  deleted  Boolean @default(false)

  // defaults
  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime  @updatedAt @map("updated_at")
  orders    OrderDb[]

  @@index([id])
  @@index([username])
  @@index([email])
  @@map("users")
  @@schema("assessment")
}

model OrderDb {
  // columns
  id      String     @unique @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name    String
  value   BigInt
  size    EnumSizeDb
  user_id String     @db.Uuid

  // defaults
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  // relationships
  user UserDb @relation(fields: [user_id], references: [id])

  @@index([id])
  @@index([user_id])
  @@map("orders")
  @@schema("assessment")
}

enum EnumSizeDb {
  Small
  Medium
  Large

  @@map("enum_order_size")
  @@schema("assessment")
}
